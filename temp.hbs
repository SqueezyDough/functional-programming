<h1>Kleding per land</h1>

<section id="graph"></section>

<script src="https://d3js.org/d3.v3.min.js"></script>
<script>

let xhr = new XMLHttpRequest();
xhr.onreadystatechange = function() {
    if (this.readyState === 4 && this.status === 200) {
      let data = JSON.parse(this.responseText);

      drawGraph(data)
    }
};
xhr.open("GET", `/fetch`, true);
xhr.send();

function drawGraph(data) {
	// D3 Bubble Chart
	var diameter = 600;

	var svg = d3.select('#graph').append('svg')
					.attr('width', diameter)
					.attr('height', diameter);

	var bubble = d3.layout.pack()
				.size([diameter, diameter])
				.value(function(d) {return d.size;})
          //.sort(function(a, b) {
				   //return -(a.value - b.value)
				  //})
				.padding(3);

  // generate data with calculated layout values
  var nodes = bubble.nodes(processData(data))
						.filter(function(d) { return !d.children; }); // filter out the outer bubble


  var

  var vis = svg.selectAll('circle')
					.data(nodes);

  vis.enter().append('circle')
			.attr('transform', function(d) { return 'translate(' + d.x + ',' + d.y + ')'; })
			.attr('r', function(d) { return d.r; })
      .attr('class', function(d) { return d.className; })
      .attr('size', function(d) { return d.size; });

  function processData(data) {
    var newDataSet = [];

    data.forEach( (obj) => {
      newDataSet.push({
        name: obj.country, className: obj.country.toLocaleLowerCase(), size: obj.amount
      })
    })

    return {children: newDataSet};
  }

}

</script>